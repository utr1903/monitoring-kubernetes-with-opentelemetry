### Variables

# Name
name: "otelcollectorsts"

# Image
image:
  # Repository
  repository: otel/opentelemetry-collector-contrib
  # Image pull policy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# Amount of replicas
replicas: 2

# Service account
serviceAccount:
  # Annotations to add to the service account
  annotations: {}

clusterRole:
  # Annotations to add to the clusterRole
  # Can be used in combination with presets that create a cluster role.
  annotations: {}
  # A set of rules as documented here : https://kubernetes.io/docs/reference/access-authn-authz/rbac/
  # Can be used in combination with presets that create a cluster role to add additional rules.
  rules:
    - apiGroups:
      - ""
      resources:
        - events
        - namespaces
        - namespaces/status
        - nodes
        - nodes/spec
        - nodes/stats
        - nodes/proxy
        - nodes/metrics
        - pods
        - pods/status
        - replicationcontrollers
        - replicationcontrollers/status
        - resourcequotas
        - services
        - endpoints
        - ingresses
        - configmaps
      verbs:
        - get
        - list
        - watch
    - apiGroups:
      - apps
      resources:
        - daemonsets
        - deployments
        - replicasets
        - statefulsets
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - extensions
      resources:
        - daemonsets
        - deployments
        - replicasets
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - batch
      resources:
        - jobs
        - cronjobs
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - autoscaling
      resources:
        - horizontalpodautoscalers
      verbs:
        - get
        - list
        - watch
    - nonResourceURLs:
        - "/metrics"
        - "/metrics/cadvisor"
      verbs:
        - "get"

clusterRoleBinding:
  # Annotations to add to the clusterRoleBinding
  # Can be used in combination with presets that create a cluster role binding.
  annotations: {}

# Array of key value pairs defining the ports for the
# collector to expose
ports:
  # Prometheus
  prometheus:
    name: prometheus
    protocol: TCP
    port: 8888
    targetPort: 8888

# Resource limits & requests. Update according to your own use case as these values might be too low for a typical deployment.
resources:
  requests:
    cpu: 32m
    memory: 128Mi
  limits:
    cpu: 256m
    memory: 512Mi

# Environment variables
env:
  - name: TEST
    value: asdasdasd

# Open Telemetry collector configuration
config:
  # Receivers
  receivers:
    # Prometheus
    prometheus:
      enabled: true
      config:
        scrape_configs:
          # Scrape own metrics
          - job_name: 'otelcollector'
            scrape_interval: 10s
            static_configs:
            - targets:
              - 0.0.0.0:{{ .Values.prometheus.port }}
          # Scrape cadvisor metrics
          - job_name: 'kubernetes-nodes-cadvisor'
            scheme: https
            tls_config:
              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              insecure_skip_verify: true
            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
            kubernetes_sd_configs:
              - role: node
            relabel_configs:
              # - action: labelmap
              #   regex: __meta_kubernetes_node_label_(.+)
              #   # replacement: $$1
              #   # separator: ;
              - target_label: __address__
                replacement: kubernetes.default.svc:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/$$1/proxy/metrics/cadvisor
  # Processors
  processors:
    # Batch received telemetry
    batch:
      send_batch_max_size: 1000
      timeout: 30s
      send_batch_size : 800
    # Memory limiter for controlling memory limits
    memory_limiter:
        check_interval: 1s
        limit_percentage: 70
        spike_limit_percentage: 30
    # Cumulative to delta
    cumulativetodelta:
    # Kubernetes attributes
    k8sattributes:
      extract:
        metadata:
        - k8s.cluster.name
        - k8s.node.name
        - k8s.namespace.name
        - k8s.pod.name
      passthrough: false
      pod_association:
      - sources:
        - from: resource_attribute
          name: k8s.pod.ip
      - sources:
        - from: resource_attribute
          name: k8s.pod.uid
      - sources:
        - from: connection
  # Exporters
  exporters:
    # OTLP
    otlp:
      endpoint: asd
      tls:
        insecure: false
      headers:
        api-key: asd
    # Enable telemetry data logging of the collector
    logging:
      verbosity: detailed
  # Extensions
  extensions:
    # Memory ballast
    memory_ballast:
      size_in_percentage: 20
  # Service
  service:
    extensions:
      - memory_ballast
    pipelines:
      metrics/team1:
        receivers:
          - prometheus
        processors:
          - k8sattributes
          - batch
          - memory_limiter
          - cumulativetodelta
        exporters:
          - otlp
          # - logging
    telemetry:
      metrics:
        address: 0.0.0.0:{{ .Values.prometheus.port }}
      # logs:
      #   level: DEBUG

# New Relic OTLP endpoint
newrelicOtlpEndpoint: "otlp.nr-data.net:4317"

# New Relic license key
newrelicLicenseKey: ""
